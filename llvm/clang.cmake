set(TOOLCHAIN_DIR "" CACHE STRING "")

set(CMAKE_BUILD_TYPE Release CACHE STRING "")
set(BUILD_SHARED_LIBS OFF CACHE BOOL "")
set(LLVM_INCLUDE_TESTS OFF CACHE BOOL "")

set(LLVM_BUILD_STATIC ON CACHE BOOL "")

set(CMAKE_SKIP_RPATH ON CACHE BOOL "")
set(LLVM_STATIC_LINK_CXX_STDLIB ON CACHE BOOL "")

set(LLVM_HAVE_LIBXAR OFF CACHE BOOL "")

set(CMAKE_SYSTEM_NAME Linux CACHE BOOL "")
set(LLVM_DEFAULT_TARGET_TRIPLE ${TARGET_TRIPLE} CACHE STRING "")

set(CMAKE_C_COMPILER "${TOOLCHAIN_DIR}/bin/clang" CACHE STRING "")
set(CMAKE_CXX_COMPILER "${TOOLCHAIN_DIR}/bin/clang++" CACHE STRING "")
set(CMAKE_RANLIB "${TOOLCHAIN_DIR}/bin/llvm-ranlib" CACHE STRING "")
set(CMAKE_AR "${TOOLCHAIN_DIR}/bin/llvm-ar" CACHE STRING "")
set(LLVM_ENABLE_LLD ON CACHE BOOL "")
set(LLVM_ENABLE_LIBCXX ON CACHE BOOL "")

set(CMAKE_POSITION_INDEPENDENT_CODE ON CACHE BOOL "")

set(LLVM_NATIVE_TOOL_DIR "${TOOLCHAIN_DIR}/bin" CACHE STRING "")

execute_process(COMMAND "${CMAKE_C_COMPILER}" -print-resource-dir OUTPUT_VARIABLE compiler_resource_dir)
string(STRIP ${compiler_resource_dir} compiler_resource_dir)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER CACHE STRING "")
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY CACHE STRING "")
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY CACHE STRING "")
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY CACHE STRING "")
set(CMAKE_C_FLAGS "-nostdinc -isystem ${CMAKE_SYSROOT}/include -isystem ${compiler_resource_dir}/include -L${CMAKE_SYSROOT}/lib" CACHE STRING "")
set(CMAKE_CXX_FLAGS "-nostdinc -isystem ${CMAKE_SYSROOT}/include/c++/v1 -isystem ${CMAKE_SYSROOT}/include -isystem ${compiler_resource_dir}/include -L${CMAKE_SYSROOT}/lib" CACHE STRING "")

set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY" CACHE STRING "")
set(BUILTINS_CMAKE_ARGS "-DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY" CACHE STRING "")
set(RUNTIMES_CMAKE_ARGS "-DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY" CACHE STRING "")

set(CMAKE_ASM_COMPILER_TARGET ${TARGET_TRIPLE} CACHE STRING "")
set(CMAKE_C_COMPILER_TARGET ${TARGET_TRIPLE} CACHE STRING "")
set(CMAKE_CXX_COMPILER_TARGET ${TARGET_TRIPLE} CACHE STRING "")

set(LLVM_ENABLE_PROJECTS "llvm;clang;lld" CACHE STRING "")
set(LLVM_ENABLE_RUNTIMES "compiler-rt" CACHE STRING "")

set(COMPILER_RT_BUILD_LIBFUZZER OFF CACHE BOOL "")
set(COMPILER_RT_BUILD_MEMPROF OFF CACHE BOOL "")
set(COMPILER_RT_BUILD_ORC OFF CACHE BOOL "")
set(COMPILER_RT_BUILD_PROFILE OFF CACHE BOOL "")
set(COMPILER_RT_BUILD_SANITIZERS OFF CACHE BOOL "")
set(COMPILER_RT_BUILD_XRAY OFF CACHE BOOL "")
set(COMPILER_RT_ENABLE_STATIC_UNWINDER ON CACHE BOOL "")
set(COMPILER_RT_STATIC_CXX_LIBRARY ON CACHE BOOL "")
set(COMPILER_RT_USE_BUILTINS_LIBRARY ON CACHE BOOL "")
set(COMPILER_RT_USE_LIBCXX ON CACHE BOOL "")
set(COMPILER_RT_USE_LLVM_UNWINDER ON CACHE BOOL "")

set(CLANG_DEFAULT_LINKER lld CACHE STRING "")
set(CLANG_DEFAULT_OBJCOPY llvm-objcopy CACHE STRING "")
set(CLANG_DEFAULT_RTLIB compiler-rt CACHE STRING "")
set(CLANG_DEFAULT_CXX_STDLIB libc++ CACHE STRING "")
set(CLANG_DEFAULT_UNWINDLIB none CACHE STRING "")
set(CLANG_DEFAULT_PIE_ON_LINUX ON CACHE BOOL "")

set(CLANG_LINKS_TO_CREATE clang++ clang-cl clang-cpp cc cpp c++ CACHE STRING "")
set(LLD_SYMLINKS_TO_CREATE ld.lld ld CACHE STRING "")
set(LLVM_INSTALL_BINUTILS_SYMLINKS ON CACHE BOOL "")
set(
    LLVM_DISTRIBUTION_COMPONENTS

    clang
    lld

    llvm-ar
    llvm-nm
    llvm-objcopy
    llvm-objdump
    llvm-ranlib
    llvm-readelf
    llvm-readobj
    llvm-size
    llvm-strings
    llvm-strip
    ar
    nm
    objcopy
    objdump
    ranlib
    readelf
    size
    strings
    strip

    clang-resource-headers
    builtins
    runtimes

    CACHE STRING ""
)
